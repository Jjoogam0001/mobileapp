<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="http://schemas.modernwpf.com/2019">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Typography.xaml" />
        <ResourceDictionary Source="Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="ToggleButton" x:Key="Toggl.TimeEntryDayHeaderToggleButton">
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{DynamicResource Toggl.CardBackground}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root"
                          Margin="0"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentControl x:Name="PART_ContentPresenter"
                                                   Padding="{TemplateBinding Padding}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid x:Name="BtnArrowBackground"
                              Grid.Column="1"
                              Margin="4 0 8 0"
                              Width="24">
                            <Path x:Name="BtnArrow"
                                  Width="11"
                                  Height="11"
                                  HorizontalAlignment="Center"
                                  Data="F0 M 50.72,52.83 L 56,47.39 56.48,48.03 50.72,53.8 44.79,48.03 45.27,47.39 50.72,52.83 z"
                                  Fill="{DynamicResource Toggl.DarkGrayBrush}"
                                  IsHitTestVisible="false"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  Stretch="Uniform" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True">
                            <Setter TargetName="BtnArrowBackground" Property="LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Toggl.Button.Outlined.HoverBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Toggl.Button.Outlined.PressedBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="Toggl.ContinueButton">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource Toggl.SecondaryTextBrush}" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Canvas Background="Transparent"
                            Height="32"
                            Width="32">
                        <Path Name="ContinueIcon"
                              Canvas.Top="-2"
                              Canvas.Left="-5"
                              Fill="{TemplateBinding Foreground}"
                              Data="{StaticResource StartButtonGeometry}"/>
                        <!-- Canvas.Top and .Left is to adjust to StartButtonGeometry which is centered for 36x36 size -->
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Toggl.AccentBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Toggl.Button.Accent.PressedBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="ToggleButton" x:Key="Toggl.GroupIcon">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource Toggl.TextBox.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource Toggl.SecondaryTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Height="24" Width="24"
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <TextBlock Style="{StaticResource Toggl.CaptionText}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   LineHeight="16"
                                   Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                   Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource Toggl.GroupIcon.ExpandedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Toggl.GroupIcon.ExpandedBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource Toggl.AccentBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>